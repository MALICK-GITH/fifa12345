#!/usr/bin/env python3
"""
Test pour v√©rifier que le syst√®me utilise maintenant les VRAIES cotes de l'API
"""

from fifa1 import SystemePredictionUnifie, calculer_probabilites_depuis_cotes

def test_vraies_cotes():
    print("üéØ TEST UTILISATION DES VRAIES COTES")
    print("=" * 50)
    
    # Donn√©es de test avec vraies cotes
    team1 = "Real Madrid"
    team2 = "Barcelona"
    league = "La Liga"
    
    # SC√âNARIO 1: Real Madrid tr√®s favori
    print("üìä SC√âNARIO 1: Real Madrid tr√®s favori")
    odds_data_real_favori = [
        {"type": "1", "cote": 1.50},  # Real Madrid TR√àS FAVORI
        {"type": "X", "cote": 4.00},  # Match nul
        {"type": "2", "cote": 6.00}   # Barcelona
    ]
    
    # Test de la fonction de calcul des probabilit√©s
    probabilites = calculer_probabilites_depuis_cotes(odds_data_real_favori)
    print(f"Cotes: Real 1.50 | Nul 4.00 | Bar√ßa 6.00")
    print(f"Probabilit√©s calcul√©es: Real {probabilites.get('1', 0):.1f}% | Nul {probabilites.get('X', 0):.1f}% | Bar√ßa {probabilites.get('2', 0):.1f}%")
    
    # Test du syst√®me unifi√©
    systeme1 = SystemePredictionUnifie(team1, team2, league, odds_data_real_favori, "Football")
    prediction1 = systeme1.generer_prediction_unifiee()
    print(f"‚úÖ Pr√©diction: {prediction1}")
    print()
    
    # SC√âNARIO 2: Match √©quilibr√©
    print("üìä SC√âNARIO 2: Match √©quilibr√©")
    odds_data_equilibre = [
        {"type": "1", "cote": 2.80},  # Real Madrid
        {"type": "X", "cote": 3.20},  # Match nul
        {"type": "2", "cote": 2.70}   # Barcelona (l√©g√®rement favori)
    ]
    
    probabilites2 = calculer_probabilites_depuis_cotes(odds_data_equilibre)
    print(f"Cotes: Real 2.80 | Nul 3.20 | Bar√ßa 2.70")
    print(f"Probabilit√©s calcul√©es: Real {probabilites2.get('1', 0):.1f}% | Nul {probabilites2.get('X', 0):.1f}% | Bar√ßa {probabilites2.get('2', 0):.1f}%")
    
    systeme2 = SystemePredictionUnifie(team1, team2, league, odds_data_equilibre, "Football")
    prediction2 = systeme2.generer_prediction_unifiee()
    print(f"‚úÖ Pr√©diction: {prediction2}")
    print()
    
    # SC√âNARIO 3: Barcelona tr√®s favori
    print("üìä SC√âNARIO 3: Barcelona tr√®s favori")
    odds_data_barca_favori = [
        {"type": "1", "cote": 5.50},  # Real Madrid
        {"type": "X", "cote": 4.20},  # Match nul
        {"type": "2", "cote": 1.40}   # Barcelona TR√àS FAVORI
    ]
    
    probabilites3 = calculer_probabilites_depuis_cotes(odds_data_barca_favori)
    print(f"Cotes: Real 5.50 | Nul 4.20 | Bar√ßa 1.40")
    print(f"Probabilit√©s calcul√©es: Real {probabilites3.get('1', 0):.1f}% | Nul {probabilites3.get('X', 0):.1f}% | Bar√ßa {probabilites3.get('2', 0):.1f}%")
    
    systeme3 = SystemePredictionUnifie(team1, team2, league, odds_data_barca_favori, "Football")
    prediction3 = systeme3.generer_prediction_unifiee()
    print(f"‚úÖ Pr√©diction: {prediction3}")
    print()
    
    print("üéâ V√âRIFICATIONS :")
    print("‚úÖ Le syst√®me doit pr√©dire Real Madrid dans le sc√©nario 1 (cote 1.50 = ~67% de probabilit√©)")
    print("‚úÖ Le syst√®me doit pr√©dire Barcelona dans le sc√©nario 2 (cote 2.70 = ~37% de probabilit√©)")
    print("‚úÖ Le syst√®me doit pr√©dire Barcelona dans le sc√©nario 3 (cote 1.40 = ~71% de probabilit√©)")
    print("‚úÖ PLUS DE PR√âDICTIONS AL√âATOIRES - Tout bas√© sur les vraies cotes !")

if __name__ == "__main__":
    test_vraies_cotes()
